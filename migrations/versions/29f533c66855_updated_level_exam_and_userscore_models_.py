"""Updated Level, Exam, and UserScore Models for Designation-Based Skipping

Revision ID: 29f533c66855
Revises: a72f1a80a402
Create Date: 2025-02-24 15:46:27.437290

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '29f533c66855'
down_revision = 'a72f1a80a402'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_number', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level_number')
    )
    op.create_table('level_areas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('level_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('required_exam_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], ),
    sa.ForeignKeyConstraint(['level_id'], ['levels.id'], ),
    sa.ForeignKeyConstraint(['required_exam_id'], ['exams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('designations', schema=None) as batch_op:
        batch_op.add_column(sa.Column('starting_level', sa.Integer(), nullable=True))

    with op.batch_alter_table('exams', schema=None) as batch_op:
        batch_op.add_column(sa.Column('level_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('area_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'areas', ['area_id'], ['id'])
        batch_op.create_foreign_key(None, 'levels', ['level_id'], ['id'])
        batch_op.drop_column('level')

    with op.batch_alter_table('user_scores', schema=None) as batch_op:
        batch_op.add_column(sa.Column('area_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('level_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('attempts', sa.Integer(), nullable=True))
        batch_op.alter_column('score',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.create_foreign_key(None, 'levels', ['level_id'], ['id'])
        batch_op.create_foreign_key(None, 'areas', ['area_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('current_level', sa.Integer(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('current_level')

    with op.batch_alter_table('user_scores', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('score',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.drop_column('attempts')
        batch_op.drop_column('level_id')
        batch_op.drop_column('area_id')

    with op.batch_alter_table('exams', schema=None) as batch_op:
        batch_op.add_column(sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('area_id')
        batch_op.drop_column('level_id')

    with op.batch_alter_table('designations', schema=None) as batch_op:
        batch_op.drop_column('starting_level')

    op.drop_table('level_areas')
    op.drop_table('levels')
    op.drop_table('areas')
    # ### end Alembic commands ###
